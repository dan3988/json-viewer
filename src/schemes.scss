@use "./core.scss" as core;
@use "sass:color";

@function toRGB($hex) {
	@return red($hex) + "," + green($hex) + "," + blue($hex);
}

@function json-cols($key, $keywd, $str, $num) {
	@return ("key": $key, "keywd": $keywd, "str": $str, "num": $num);
}

// scss-docs-start color-functions
// Tint a color: mix a color with white
@function tint-color($color, $weight) {
	@return mix(white, $color, $weight);
}

// Shade a color: mix a color with black
@function shade-color($color, $weight) {
	@return mix(black, $color, $weight);
}

// Shade the color if the weight is positive, else tint it
@function shift-color($color, $weight) {
	@return if($weight > 0, shade-color($color, $weight), tint-color($color, -$weight));
}

$def-indent-lt: (#0431fa, #319331, #7b3814);
$def-indent-dk: (#ffd700, #da70d6, #179fff);

@mixin scheme-lt($name, $key, $keywd, $str, $num, $text: #212529, $base: #fff, $bgModif: -3%, $tertiaryModif: 2%, $borderModif: 10%, $indents: $def-indent-lt) {
	@include scheme($name, light, $key, $keywd, $str, $num, $text, adjust-color($base, $lightness: $bgModif * 4), $base, adjust-color($base, $lightness: $bgModif), adjust-color($base, $lightness: $bgModif * 2), $tertiaryModif, $borderModif, $indents) {
		@include bs-effects("jv-primary", "text", $base);
		@content;
	}
}

@mixin scheme-dk($name, $key, $keywd, $str, $num, $text: #adb5bd, $base: #212529, $bgModif: 5%, $tertiaryModif: -5%, $borderModif: -20%, $indents: $def-indent-dk) {
	@include scheme($name, dark, $key, $keywd, $str, $num, $text, adjust-color($base, $lightness: $bgModif * 4), $base, adjust-color($base, $lightness: $bgModif), adjust-color($base, $lightness: $bgModif * 2), $tertiaryModif, $borderModif, $indents) {
		@include bs-effects("jv-primary", "text", #fff);
		@content;
	}
}

@mixin scheme-selector($scheme, $mode) {
	@if ($mode == null) {
		:global([data-bs-theme][data-scheme="#{$scheme}"]),
		:global([data-bs-theme] [data-scheme="#{$scheme}"]),
		:global([data-scheme="#{$scheme}"] [data-bs-theme]) {
			@content;
		}
	} @else {
		:global([data-bs-theme="#{$mode}"][data-scheme="#{$scheme}"]),
		:global([data-bs-theme="#{$mode}"] [data-scheme="#{$scheme}"]),
		:global([data-scheme="#{$scheme}"] [data-bs-theme="#{$mode}"]) {
			@content;
		}
	}
}

@mixin scheme-base($name, $mode, $key, $keywd, $str, $num, $text, $border, $body, $tertiary, $secondary, $indents: null) {
	@include scheme-selector($name, $mode) {
		--jv-key-fg: #{$key};
		--jv-keywd-fg: #{$keywd};
		--jv-str-fg: #{$str};
		--jv-num-fg: #{$num};
		--jv-border-color: #{$border};

		@include bs-color(jv-body-bg, $body);
		@include bs-color(jv-body-text, $text);
		@include bs-color(jv-tertiary-bg, $tertiary);
		@include bs-color(jv-tertiary-text, rgba($text, 0.5));

		@if ($indents) {
			@for $i from 1 through length($indents) {
				--jv-indent-#{$i}: #{toRGB(nth($indents, $i))};
			}

			@for $i from 1 through length($indents) {
				:global(.json-indent[data-indent="#{$i - 1}"]) {
					--jv-indent: var(--jv-indent-#{$i});
				}
			}
		}

		@content;
	}
}

@mixin scheme($name, $mode, $key, $keywd, $str, $num, $text, $border, $body, $tertiary, $secondary, $tertiaryModif, $borderModif, $indents: null) {
	@include scheme-base($name, $mode, $key, $keywd, $str, $num, $text, $border, $body, $tertiary, $secondary, $indents) {
		@include bs-colors("jv-tertiary", "bg", $tertiary, $tertiaryModif);
		@include bs-colors("jv-tertiary", "text", $text);
		@include bs-colors("jv-tertiary", "border", $border, $borderModif, $disabled: 0);

		@content;
	}
}

@mixin bs-color($key, $value) {
	--#{$key}: #{$value};
	--#{$key}-rgb: #{toRGB($value)};
}

@mixin primary($color, $modif) {
	@include bs-colors("jv-primary", "bg", $color, $modif);
	--jv-primary-bg-rgb: #{toRGB($color)};
	@include bs-colors("jv-primary", "border", $color, $modif);
	--jv-primary-border-rgb: #{toRGB($color)};
}

@mixin bs-effects($name, $postfix, $default, $hover: $default, $active: $default, $disabled: $default) {
	--#{$name}-#{$postfix}: #{$default};
	--#{$name}-hover-#{$postfix}: #{$hover};
	--#{$name}-active-#{$postfix}: #{$active};
	--#{$name}-disabled-#{$postfix}: #{$disabled};
}

@mixin bs-colors2($name, $postfix, $color, $mix, $hoverMix, $activeMix, $disabled) {
	@include bs-effects($name, $postfix, $color, mix($mix, $color, $hoverMix), mix($mix, $color, $activeMix), $disabled);
}

@mixin bs-colors($name, $postfix, $color, $amount: 0%, $hover: 1, $active: 2, $disabled: -2) {
	@include bs-effects($name, $postfix, $color, shift-color($color, $amount * $hover), shift-color($color, $amount * $active), shift-color($color, $amount * $disabled));
}

@include scheme-lt("default", #000000, #0000ff, #a31515, #098658, $base: #fafafa) {
	@include primary(#0d6efd, 5%);
}

@include scheme-dk("default", #9cdcfe, #569cd6, #ce9178, #b5cea8, $base: #1f1f1f) {
	@include primary(#0d6efd, -10%);
}

@include scheme-lt("dracula", #e60073, #bf95f9, #bec757, #1fc749, $text: #0d0d08, $base: #f1f1f4, $indents: (hsl(60, 30%, 4%), hsl(326, 100%, 54%), hsl(191, 97%, 57%), hsl(135, 94%, 45%), hsl(265, 89%, 58%), hsl(31, 100%, 51%))) {
	@include primary(#e60073, 5%);
}

@include scheme-dk("dracula", #ff79c6, #bd93f9, #f1fa8c, #50fa7b, $text: #f8f8f2, $base: #272935, $indents: (#f8f8f2, #ff79c6, #8be9fd, #50fa7b, #bd93f9, #ffb86c)) {
	@include primary(#e60073, -10%);
}

@include scheme-lt("mat", #6182b8, #f76d47, #91b859, #f76d47, $base: #f8f9fb, $indents: (#7c4dff, #ffb62c, #f76d47, #e53935, #c17e70, #6182b8)) {
	@include primary(#33ccbd, 5%);

	:global(.btn-primary) {
		@include bs-colors("bs-btn", "text", #d6f5f2, -20%, $disabled: 0.5);
	}
}

@include scheme-dk("mat", #c792ea, #82aaff, #c3e88d, #f78c6c, $text: #e1e7ea, $base: #263238, $indents: (#c792ea, #ffcb6b, #f78c6c, #ff5370, #c17e70, #82aaff)) {
	@include primary(#3d8f87, -10%);

	:global(.btn-primary) {
		@include bs-colors("bs-btn", "text", #b3e0dc, -50%, $disabled: 0.5);
	}
}

@include scheme-dk("abyss", #6688cc, #f280d0, #22aa44, #f280d0, $text: #b3c4e6, $base: #000d1a) {
	@include primary(#8800cc, -10%);
}

@include scheme-lt("monokai", #f9005a, #704db3, #85ba1c, #4daecc, $base: #fafafa) {
	@include primary(#0060C0, 5%);
}

@include scheme-dk("monokai", #f92672, #ae81ff, #a6e22e, #66d9ef, $text: #f8f8f2, $base: #272822) {
	@include primary(#75715e, -10%);
}

@include scheme-lt("github", #cf222e, #005cc5, #032f62, #6f42c1, $base: #ffffff, $indents: (#005cc5, #5a32a3, #e36209)) {
	@include primary(#159739, 5%);
}

@include scheme-dk("github", #f97583, #79b8ff, #9ecbff, #b392f0, $text: #d1d5da, $base: #24292e, $indents: (#79b8ff, #ffab70, #b392f0)) {
	@include primary(#176f2c, -10%);
}

@include scheme-lt("solarized", #859900, #b58900, #2aa198, #d33682, $text: #657b83, $base: #fdf6e3, $indents: (#0431fa, #319331, #7b3814)) {
	@include primary(#ac9d57, 5%);
}

@include scheme-dk("solarized", #859900, #b58900, #2aa198, #d33682, $text: #839496, $base: #002b36, $indents: (#cdcdcd, #b58900, #d33682)) {
	@include primary(#2aa198, -10%);
}

$cyberpunk-base: #110019;
$cyberpunk-text: #ff0055;
$cyberpunk-border: #80002f;

@include scheme-base("cyberpunk", null, $cyberpunk-text, #d57bff, #76c1ff, #fffc58, $text: $cyberpunk-text, $border: $cyberpunk-border, $body: $cyberpunk-base, $tertiary: $cyberpunk-base, $secondary: #330013, $indents: (#ff00d5, #55cc00, #00d5ff)) {
	--bs-link-color: #{$cyberpunk-text};

	@include bs-colors2("jv-tertiary", "bg", $cyberpunk-base, $cyberpunk-text, 25%, 50%, #111);
	@include bs-colors2("jv-tertiary", "text", $cyberpunk-text, $cyberpunk-text, 50%, 100%, $cyberpunk-text);
	@include bs-colors2("jv-tertiary", "border", $cyberpunk-border, $cyberpunk-text, 50%, 100%, $cyberpunk-text);
	
	@include bs-colors2("jv-primary", "bg", #4d001c, $cyberpunk-text, 20%, 40%, $cyberpunk-base);
	--jv-primary-bg-rgb: #{toRGB($cyberpunk-text)};
	@include bs-colors2("jv-primary", "border", $cyberpunk-text, #fff, 10%, 20%, $cyberpunk-border);
	@include bs-colors2("jv-primary", "text", $cyberpunk-text, #fff, 10%, 20%, $cyberpunk-border);
	--jv-primary-border-rgb: #{toRGB($cyberpunk-text)};
}

$terminal-base: #3D6;
$terminal-text: #0c0;
$terminal-disabled: #595;
$terminal-secondary: #8f8;

@include scheme-base("terminal", null, $terminal-base, $terminal-secondary, $terminal-secondary, $terminal-secondary, $text: $terminal-text, $border: $terminal-text, $body: #040804, $tertiary: black, $secondary: #0f01, $indents: (#08f, #ff0, #f00)) {
	@include bs-colors2("jv-tertiary", "bg", #000, $terminal-base, 15%, 30%, #111);
	@include bs-colors2("jv-tertiary", "text", $terminal-text, $terminal-base, 50%, 100%, $terminal-disabled);
	@include bs-colors2("jv-tertiary", "border", $terminal-text, $terminal-base, 50%, 100%, $terminal-disabled);

	@include bs-colors2("jv-primary", "bg", #000, $terminal-base, 15%, 30%, #111);
	--jv-primary-bg-rgb: #{toRGB(#000)};
	@include bs-colors2("jv-primary", "text", $terminal-text, $terminal-base, 50%, 100%, $terminal-disabled);
	@include bs-colors2("jv-primary", "border", $terminal-text, $terminal-base, 50%, 100%, $terminal-disabled);
	--jv-primary-border-rgb: #{toRGB($terminal-base)};
}

@mixin bg($name, $filename: "res/" + $name + ".png", $repeat: null, $size: null) {
	:global([data-editor-bg="#{$name}"] .editor-bg) {
		background-color: var(--editor-bg-color);
		@include core.img-mask(ext-url($filename), $repeat, $size);
		@content;
	}
}

@include bg("bricks", $size: 32px);
@include bg("cubes", $size: 32px);
@include bg("cross");
@include bg("hive", $size: 32px);
@include bg("plaid");
@include bg("tiles", $size: 32px);
@include bg("triangles", $size: 64px);
@include bg("waves", $size: 64px);
@include bg("web");